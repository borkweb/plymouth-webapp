<?php
require_once( 'autoload.php' );
PSU::session_start();

IDMObject::authN();

// *** Site Constants ***
// **********************

// Base directory of application
$GLOBALS['BASE_DIR'] = dirname(__FILE__);

// Base URL
$GLOBALS['BASE_URL'] = 'https://'.$_SERVER['HTTP_HOST'].'/webapp/portal/channel/ir_reports';

$GLOBALS['TEMPLATES'] = $GLOBALS['BASE_DIR'] . '/templates';

$GLOBALS['TITLE'] = 'Academic Affairs Reports';

// **************************
// *** End Site Constants ***


// *** Required files ***
// **********************

require_once 'klein/klein.php';
require_once 'includes/IrReportsAPI.class.php';

// **************************
// *** End required files ***

respond( function( $request, $response, $app ) {
	if( ! IDMObject::authZ('role', 'ir_reports_deans') && ! IDMObject::authZ('permission', 'mis') ) {
		        die('You do not have access to this application.');
	}
	$app->tpl = new PSUTemplate;
	$app->tpl->channel();

	$app->tpl->assign('base_url', $GLOBALS['BASE_URL']);	
});

respond( '/?', function( $request, $response, $app ) {

	//display all the files
	$files = IR::get_all_file_info('display_name');

	$app->tpl->assign('files', $files);
	$app->tpl->display('index.tpl');
});


respond( '/reports/[:report_name]/?', function( $request, $response, $app ) {

	$report_name = $request->report_name;

	$file = 'files/'.$report_name;

	header('Content-type: application/pdf');
	header("Content-Disposition: inline; filename=".$file);
	/*header("Content-Disposition: attachment; filename=".$file);*/
	header('Last-Modified: '.gmdate('D, d M Y H:i:s') . ' GMT');
	header('Cache-Control: no-store, no-cache, must-revalidate');
	header('Cache-Control: pre-check=0, post-check=0, max-age=0');
	header('Pragma: anytextexeptno-cache', true);
	header('Cache-control: private');
	header('Expires: 0');

	//read all the files!
	readfile($file); 

});

respond('POST', '/edit/?', function( $request, $response, $app ) {
	$keys = array_keys($_POST);
	$values = array_values($_POST);
	foreach($keys as &$key){
		$pos = strlen($key) - 4;
		$key[$pos] = '.';
	}

	for($i = 0; $i < count($keys); $i++){
		$file_name = $keys[$i];
		$display_name = $values[$i];
		if ($file_name != $display_name){
			$files[$i]['file_name'] = $file_name;
			$files[$i]['display_name'] = $display_name;
		}
	}

	foreach ($files as $file){
		$file_db = PSU::db('myplymouth')->GetAll('SELECT * from ir_reports WHERE file = ?', array($file['file_name']));
		if ($file_db[0]['link_text'] && $file_db[0]['link_text'] != $file['display_name']){
			PSU::db('myplymouth')->Execute('UPDATE ir_reports SET link_text = ? WHERE file = ?', array($file['display_name'], $file['file_name']));
		}	elseif (!$file_db[0]['link_text']) {
			PSU::db('myplymouth')->Execute('INSERT INTO ir_reports (file, link_text) VALUES (?, ?)', array($file['file_name'], $file['display_name']));
		}
	}
	$response->redirect($GLOBALS['BASE_URL']);
});
respond('GET', '/edit/?', function( $request, $response, $app ) {
	//edit all the files!
	$files = IR::get_all_file_info('file_name');

	$app->tpl->assign('files', $files);	

	$app->tpl->display('edit.tpl');
});
$app_routes = array();

foreach( $app_routes as $base ) {
		with( "/{$base}", $GLOBALS['BASE_DIR'] . "/routes/{$base}.php" );
}//end foreach

dispatch( $_SERVER['PATH_INFO'] );
